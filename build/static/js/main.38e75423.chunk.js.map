{"version":3,"sources":["context/CRMContext.js","components/layout/Header.js","components/layout/Nav.js","config/axios.js","components/CustomerBlock/Default.js","components/layout/Spinner.js","components/CustomerList/Default.js","components/CustomerNew/Default.js","components/ProductBlock/Default.js","components/ProductList/Default.js","components/ProductNew/Default.js","components/ShoppingCardOrder/Default.js","components/ShoppingCartList/Default.js","components/ShoppingCartNew/FormSearchProduct.js","components/ShoppingCartNew/FormProduct.js","components/ShoppingCartNew/Default.js","components/Auth/Login/Default.js","App.js","serviceWorker.js","index.js"],"names":["CRMContext","React","createContext","CRMProvider","props","useState","token","auth","saveAuth","Provider","value","children","withRouter","useContext","className","type","onClick","localStorage","setItem","history","push","Nav","to","config","axios","create","baseURL","process","Customer","customer","_id","name","last_name","company","email","phone","id","Swal","fire","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","delete","res","data","message","Spinner","customers","save","useEffect","isSubscribed","a","get","headers","Authorization","bg","response","status","API","length","map","key","match","params","updateStete","e","target","responseBG","code","getItem","onSubmit","preventDefault","put","post","placeholder","onChange","disabled","validate","Product","product","price","photo","src","alt","Products","products","saveProduct","fileName","saveFile","readInfo","addProduct","formData","FormData","append","console","log","min","step","width","files","ShoppingCardOrder","order","details","item","quantity","total","ShoppingCard","ordens","FormSearchProduct","searchProduct","readSearchData","FormProduct","decrease","increase","removeProduct","index","saveCustomer","search","saveSearch","saveProducts","saveTotal","newTotal","i","all","filter","createShoppingCart","shoppingcart","credentials","saveCredentials","initSession","respuesta","readData","required","App","exact","path","component","Customers","NewCustomer","NewProduct","ShoppingCarts","NewShoppingCart","Login","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38e75423.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CRMContext = React.createContext([ {}, () => {} ]);\r\n\r\nconst CRMProvider = props => {\r\n\r\n    // definir el state inicial\r\n    const [auth, saveAuth ] = useState({\r\n        token: '',\r\n        auth: false\r\n    });\r\n\r\n    return (\r\n        <CRMContext.Provider value={[auth, saveAuth]}>\r\n            {props.children}\r\n        </CRMContext.Provider> \r\n    );\r\n}\r\n\r\nexport { CRMContext, CRMProvider };","import React, {useContext} from 'react';\r\n\r\nimport { CRMContext } from '../../context/CRMContext';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n    const [auth, saveAuth] = useContext(CRMContext);\r\n\r\n    const logout = () => {\r\n        // auth.auth = false y el token se remueve\r\n        saveAuth({\r\n            token: '',\r\n            auth: false\r\n        });\r\n\r\n        localStorage.setItem('token', '');\r\n\r\n        // redireccionar\r\n        props.history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <header className=\"barra\">\r\n            <div className=\"contenedor\">\r\n                <div className=\"contenido-barra\">\r\n                    <h1>CRM - Administrador de Clientes</h1>\r\n\r\n\r\n                    { auth.auth ? (\r\n                        <button \r\n                            type=\"button\"\r\n                            className=\"btn btn-rojo\"\r\n                            onClick={logout}\r\n                        >\r\n                            <i className=\"far fa-times-circle\"></i>\r\n                            Cerrar Sesión\r\n                        </button>\r\n                    ) : null }\r\n                    \r\n                \r\n                </div>\r\n                \r\n            </div>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Header);","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { CRMContext } from '../../context/CRMContext';\r\n\r\nconst Nav = () => {\r\n\r\n    const [auth] = useContext(CRMContext);\r\n    if(!auth.auth) return null;\r\n    \r\n    return (\r\n        <aside className=\"sidebar col-3\">\r\n            <h2>Administración</h2>\r\n\r\n            <nav className=\"navegacion\">\r\n                <Link to={\"/\"} className=\"clientes\">Clientes</Link>\r\n                <Link to={\"/product\"} className=\"productos\">Productos</Link>\r\n                <Link to={\"/shoppingCart\"} className=\"pedidos\">Pedidos</Link>\r\n            </nav>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Nav;","import axios from 'axios';\r\n\r\nconst config = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default config;","import React,{Fragment} from 'react'; \r\nimport {Link} from 'react-router-dom'\r\nimport Swal from 'sweetalert2';\r\nimport axios from '../../config/axios'\r\n\r\nfunction Customer({customer}) {\r\n    \r\n    const {_id, name, last_name, company, email, phone } = customer\r\n\r\n    const deleteCustomer = id => {\r\n        Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: \"Un cliente eliminado no se puede recuperar\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar!',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                axios.delete(`/customers/${id}`)\r\n                .then(res => {\r\n                    Swal.fire(\r\n                        'Eliminado',\r\n                        res.data.message,\r\n                        'success'\r\n                    )\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"cliente\">\r\n                <div className=\"info-cliente\">\r\n                    <p className=\"nombre\">{name} {last_name}</p>\r\n                    <p className=\"empresa\">{company}</p>\r\n                    <p>{email}</p>\r\n                    <p>{phone}</p>\r\n                </div>\r\n                <div className=\"acciones\">\r\n                    <Link to={`/customer/edit/${_id}`} className=\"btn btn-azul\">\r\n                        <i className=\"fas fa-pen-alt\"></i>\r\n                        Editar Cliente\r\n                    </Link>\r\n                    \r\n                    <Link to={`/shoppingCart/new/${_id}`} className=\"btn btn-amarillo\">\r\n                        <i className=\"fas fa-plus\"></i>\r\n                        Nuevo Pedido\r\n                    </Link>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-rojo btn-eliminar\"\r\n                        onClick = {() => deleteCustomer(_id)}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                        Eliminar Cliente\r\n                    </button>\r\n                </div>\r\n            </li>   \r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Customer;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nfunction Spinner(){\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"rect1\"></div>\r\n            <div className=\"rect2\"></div>\r\n            <div className=\"rect3\"></div>\r\n            <div className=\"rect4\"></div>\r\n            <div className=\"rect5\"></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner;","import React,{useEffect, useState, useContext, Fragment} from 'react';\r\nimport axios from '../../config/axios';\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport Customer from '../CustomerBlock/Default'\r\nimport Spinner from '../layout/Spinner';\r\n\r\n// import el Context\r\nimport { CRMContext } from '../../context/CRMContext';\r\n\r\nfunction Customers(props) {\r\n\r\n    //work with state\r\n    //customer = state, save = save state\r\n    const[customers, save]= useState([]);\r\n\r\n    // utilizar valores del context\r\n    const [auth ] = useContext( CRMContext );\r\n\r\n    //useEffect para consultar api cuando cargue\r\n    useEffect( () => {\r\n        let isSubscribed = true;\r\n        if(auth.token !== ''){\r\n            //Query a la API\r\n            const API = async () => {\r\n                try {\r\n                    await axios.get('/customers', {\r\n                        headers: {\r\n                            Authorization : `Bearer ${auth.token}`\r\n                        }\r\n                    }).then(bg=>isSubscribed ? save(bg.data):null);\r\n                } catch (error) {\r\n                     // Error con authorizacion\r\n                    if(error.response.status === 500) {\r\n                        props.history.push('/login');\r\n                    }\r\n                }\r\n            }\r\n            API();\r\n            return () => (isSubscribed = false);\r\n        }else{\r\n            props.history.push('/login');\r\n        }\r\n    },[auth.token, customers, props.history]);\r\n\r\n     // Si el state esta como false\r\n    if(!auth.auth) {\r\n        props.history.push('/login');\r\n    }\r\n\r\n    //Spinner de carga\r\n    if(!customers.length) return <Spinner />\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Clientes</h2>\r\n            <Link to={\"/customer/new\"} className=\"btn btn-verde nvo-cliente\"> <i className=\"fas fa-plus-circle\"></i>\r\n                Nuevo Cliente\r\n            </Link>\r\n            <ul className=\"listado-clientes\">\r\n            {\r\n                customers.map(customer=>(\r\n                    <Customer \r\n                    key={customer._id}\r\n                    customer={customer}\r\n                    />)\r\n                )\r\n            }\r\n            </ul>\r\n        </Fragment> \r\n    )\r\n}\r\n\r\nexport default withRouter(Customers);","import React,{Fragment, useState,useContext, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from '../../config/axios';\r\n\r\n// import el Context\r\nimport { CRMContext } from '../../context/CRMContext';\r\n\r\nfunction NewCustomer(props){\r\n\r\n    //obtengo el id para saber si es un updae o un new\r\n    const {id} = props.match.params;\r\n\r\n    // utilizar valores del context\r\n    const [auth ] = useContext( CRMContext );\r\n\r\n    //customer =state, save = function to save the stata\r\n    const[customer, save] = useState({\r\n        name:'',\r\n        last_name:'',\r\n        company:'',\r\n        email:'',\r\n        phone: ''\r\n    });\r\n\r\n    const updateStete = e => {\r\n        save({\r\n            ...customer,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //validate form\r\n    const validate =()=> {\r\n        const {name,last_name,company,email,phone} = customer;\r\n        let is_valid = !name.length || !last_name.length|| !company.length|| !email.length || !phone.length;\r\n        return is_valid;\r\n    }\r\n\r\n    const responseBG = res => {\r\n        //check for monngo errors\r\n        if(res.data.code === 11000){\r\n            Swal.fire({\r\n                type:'error',\r\n                title:'Hubo un error',\r\n                text:'Ese cliente ya esta registrado'\r\n            })\r\n        }else{\r\n            Swal.fire(\r\n                `${id ? 'Se actualizo el cliente': 'Se agregó el cliente'}`,\r\n                res.data.message,\r\n                'success'\r\n            )\r\n        }\r\n        //redirect\r\n        props.history.push('/');\r\n    }\r\n\r\n    //add a new customer\r\n    const addCustomer = e => {\r\n        e.preventDefault();\r\n\r\n        if(id){\r\n            //Update\r\n            axios\r\n            .put(`/customers/${id}`,{\r\n                headers: {\r\n                    Authorization : `Bearer ${auth.token}`\r\n                }\r\n            },customer)\r\n            .then(res => {\r\n                responseBG(res);\r\n            })\r\n        }else{\r\n            //Insert\r\n            axios\r\n            .post('/customers',{\r\n                headers: {\r\n                    Authorization : `Bearer ${auth.token}`\r\n                }\r\n            }, customer)\r\n            .then(res => {\r\n                responseBG(res);\r\n            })\r\n        }\r\n    }\r\n\r\n    //useEffect, cuando el componente carga\r\n    useEffect(()=>{\r\n        let isSubscribed = true;\r\n        \r\n        if(id){ \r\n            //Query a la API\r\n            const API = async () => {\r\n                if (isSubscribed) {\r\n                    await axios.get(`/customers/${id}`,{\r\n                        headers: {\r\n                            Authorization : `Bearer ${auth.token}`\r\n                        }\r\n                    })\r\n                    .then(bg=>isSubscribed ? save(bg.data):null);\r\n                }\r\n            }\r\n            API()\r\n        };\r\n        return () => (isSubscribed = false);\r\n    },[auth.token, id]);\r\n\r\n    //verifica si el usuario esta autenticado o no \r\n    if(!auth.auth && (localStorage.getItem('token')===auth.token)) {\r\n        return props.history.push('/login')\r\n    };\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {id ? <h2>Editar Cliente</h2> : <h2>Nuevo Cliente</h2> }\r\n\r\n            <form onSubmit={addCustomer} >\r\n                { id ?  \r\n                    <legend>Actualize los campos</legend> : \r\n                    <legend>Llena todos los campos</legend>\r\n                }\r\n\r\n                <div className=\"campo\">\r\n                    <label>Nombre:</label>\r\n                    <input  type=\"text\" \r\n                            placeholder=\"Nombre Cliente\" \r\n                            name=\"name\" \r\n                            value= {customer.name}\r\n                            onChange={updateStete} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Apellido:</label>\r\n                    <input  type=\"text\" \r\n                            placeholder=\"Apellido Cliente\" \r\n                            name=\"last_name\" \r\n                            value= {customer.last_name}\r\n                            onChange={updateStete}\r\n                    />\r\n                </div>\r\n            \r\n                <div className=\"campo\">\r\n                    <label>Empresa:</label>\r\n                    <input  type=\"text\" \r\n                            placeholder=\"Empresa Cliente\" \r\n                            name=\"company\" \r\n                            value= {customer.company}\r\n                            onChange={updateStete}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Email:</label>\r\n                    <input  type=\"email\" \r\n                            placeholder=\"Email Cliente\" \r\n                            name=\"email\" \r\n                            value= {customer.email}\r\n                            onChange={updateStete}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Teléfono:</label>\r\n                    <input  type=\"tel\" \r\n                            placeholder=\"Teléfono Cliente\" \r\n                            name=\"phone\" \r\n                            value= {customer.phone}\r\n                            onChange={updateStete}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"enviar\">\r\n                    <input  type=\"submit\" \r\n                            className=\"btn btn-azul\" \r\n                            value= {id ? \"Guardar Cambios\" :\"Agregar Cliente\" }\r\n                            disabled = {validate()}\r\n                    />\r\n                </div>\r\n\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n// HOC, es una funcion que toma un componente y retorna un nuevo componenete\r\nexport default withRouter(NewCustomer);\r\n\r\n","import React,{Fragment} from 'react'; \r\nimport {Link} from 'react-router-dom'\r\nimport Swal from 'sweetalert2';\r\nimport axios from '../../config/axios'\r\n\r\n\r\nfunction Product({product}) {\r\n    \r\n    const {_id, name, price, photo } = product\r\n\r\n    const deleteProduct = id => {\r\n        Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: \"Un producto eliminado no se puede recuperar\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar!',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                axios.delete(`/products/${id}`)\r\n                .then(res => {\r\n                    if(res.status === 200){\r\n                        Swal.fire(\r\n                            'Eliminado',\r\n                            res.data.message,\r\n                            'success'\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"producto\">\r\n                    <div className=\"info-producto\">\r\n                        <p className=\"nombre\">{name}</p>\r\n                        <p className=\"precio\">S/. {price}</p>\r\n                        {\r\n                            photo ? (\r\n                                <img src={`${process.env.REACT_APP_BACKEND_URL}/${photo}`} alt=\"imagen\" />\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"acciones\">\r\n                        <Link to={`/product/edit/${_id}`} className=\"btn btn-azul\">\r\n                            <i className=\"fas fa-pen-alt\"></i>\r\n                            Editar Producto\r\n                        </Link>\r\n\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-rojo btn-eliminar\"\r\n                            onClick={()=> deleteProduct(_id)}\r\n                        >\r\n                            <i className=\"fas fa-times\"></i>\r\n                            Eliminar Producto\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Product;\r\n","import React,{useEffect, useState, Fragment} from 'react';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Product from '../ProductBlock/Default'\r\nimport Spinner from '../layout/Spinner';\r\n\r\nfunction Products() {\r\n\r\n    //work with state\r\n    //products = state, save = save state\r\n    const[products, save]= useState([]);\r\n\r\n    //useEffect para consultar api cuando cargue\r\n    useEffect( () => {\r\n        //Query a la API\r\n        const API = async () => {\r\n            const bg = await axios.get('/products');\r\n            save(bg.data)\r\n        }\r\n        API();\r\n    },[products]);\r\n\r\n    //Spinner de carga\r\n    if(!products) return <Spinner />\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Productos</h2>\r\n\r\n            <Link to={'/product/new'} className=\"btn btn-verde nvo-cliente\"> \r\n                <i className=\"fas fa-plus-circle\"></i>\r\n                Nuevo Producto\r\n            </Link>\r\n\r\n            <ul className=\"listado-productos\">\r\n            {\r\n                products.map(product=>(\r\n                    <Product \r\n                    key={product._id}\r\n                    product={product}\r\n                    />)\r\n                )\r\n            } \r\n            </ul>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Products;","import React,{Fragment, useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from '../../config/axios';\r\n\r\nfunction NewProduct(props) {\r\n\r\n    //obtengo el id para saber si es un updae o un new\r\n    const {id} = props.match.params;\r\n\r\n    //product =state, saveProduct = function to save the stata\r\n    const[product, saveProduct] = useState({ name:'',  price:'', photo:'' });\r\n\r\n    //fileName =state, saveFile = function to save the stata\r\n    const[fileName, saveFile] = useState('');\r\n\r\n    //leer datos del formulario\r\n    const readInfo = e =>{\r\n        saveProduct({\r\n            //obtener una copia del state y agregar el nuevo\r\n            ...product,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // coloca la imagen en el state\r\n    const readFile = e =>{\r\n        saveFile(e.target.files[0]);\r\n        product.photo = '';\r\n    }\r\n\r\n    const responseBG = res => {\r\n        //check for monngo errors\r\n        if(res.data.code === 11000){\r\n            Swal.fire({\r\n                type:'error',\r\n                title:'Hubo un error',\r\n                text:'Ese producto ya esta registrado'\r\n            })\r\n        }else{\r\n            Swal.fire(\r\n                `${id ? 'Se actualizo el producto': 'Se agregó el producto'}`,\r\n                res.data.message,\r\n                'success'\r\n            )\r\n        }\r\n        //redirect\r\n        props.history.push('/');\r\n    }\r\n    //validate form\r\n    const validate = ()=> {\r\n        const {name,price} = product;\r\n        let is_valid = !name.length || !price;\r\n        return is_valid;\r\n    }\r\n\r\n    //add a new Product\r\n    const addProduct = async e => {\r\n        e.preventDefault();\r\n\r\n        //crear un formdata\r\n        const formData = new FormData();\r\n        formData.append('name',product.name);\r\n        formData.append('price',product.price);\r\n        formData.append('photo',fileName);\r\n        \r\n        try {\r\n            if(id){\r\n                product.photo = fileName.name;\r\n                //Update\r\n                await axios\r\n                .put(`/products/${id}`,formData)\r\n                .then(res => {\r\n                    responseBG(res);\r\n                })\r\n            }else{\r\n                //Insert\r\n                await axios\r\n                .post('/products', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    responseBG(res);\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            //lanzar alerta\r\n            Swal.fire({\r\n                type:'error',\r\n                title:'Hubo un error',\r\n                text:'Vuelva a intentarlo'\r\n            })\r\n        }\r\n    }\r\n\r\n    //useEffect, cuando el componente carga\r\n    useEffect(()=>{\r\n        //Query a la API\r\n        const API = async () => {\r\n            const bg = await axios.get(`/products/${this.id}`);\r\n            saveProduct(bg.data);\r\n        }\r\n        API();\r\n    },[]);\r\n\r\n    return (\r\n        <Fragment>\r\n        {id ? <h2>Editar Producto</h2> : <h2>Nuevo Producto</h2> }\r\n\r\n            <form onSubmit={addProduct} >\r\n            { id ?  \r\n                <legend>Actualize los campos</legend> : \r\n                <legend>Llena todos los campos</legend>\r\n            }\r\n\r\n                <div className=\"campo\">\r\n                    <label>Nombre:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Nombre Producto\" \r\n                        name=\"name\" \r\n                        value= {product.name}\r\n                        onChange ={readInfo}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Precio:</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"price\" \r\n                        min=\"0.00\" \r\n                        step=\"0.1\" \r\n                        placeholder=\"Precio\"\r\n                        value= {product.price}\r\n                        onChange ={readInfo} \r\n                    />\r\n                </div>\r\n            \r\n                <div className=\"campo\">\r\n                    <label>Imagen:</label>\r\n                    {\r\n                        product.photo ? (\r\n                            <img src={`${process.env.REACT_APP_BACKEND_URL}/${product.photo}`} alt=\"imagen\" width=\"300\" />\r\n                        ) : null\r\n                    }\r\n                    <input \r\n                        type=\"file\"  \r\n                        name=\"imagen\"                         \r\n                        onChange ={readFile}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"enviar\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-azul\" \r\n                        value= {id ? \"Guardar Cambios\" :\"Agregar Producto\" }\r\n                        disabled = {validate()}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(NewProduct);\r\n","\r\nimport React from 'react';\r\n\r\nfunction ShoppingCardOrder({order}) {\r\n\r\n    const {customer} = order;\r\n\r\n    return(\r\n        <li className=\"pedido\">\r\n            <div className=\"info-pedido\">\r\n                <p className=\"id\">ID: 0192019201291201</p>\r\n                <p className=\"nombre\">Cliente: {customer.name} {customer.last_name} </p>\r\n\r\n                <div className=\"articulos-pedido\">\r\n                    <p className=\"productos\">Artículos Pedido: </p>\r\n                    <ul>\r\n                        {order.details.map(item => (\r\n                            <li key={order._id+item.product._id}>\r\n                                <p>{item.product.name} </p>\r\n                                <p>Precio: ${item.product.price} </p>\r\n                                <p>Cantidad: {item.quantity}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                <p className=\"total\">Total: S/. {order.total} </p>\r\n\r\n            </div>\r\n            <div className=\"acciones\">\r\n                <button type=\"button\" className=\"btn btn-rojo btn-eliminar\">\r\n                    <i className=\"fas fa-times\"></i>\r\n                    Eliminar Pedido\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ShoppingCardOrder;","import React, {useEffect, useState, Fragment} from 'react';\r\nimport axios from '../../config/axios';\r\nimport ShoppingCardOrder from '../ShoppingCardOrder/Default';\r\n\r\nfunction ShoppingCard() {\r\n\r\n    const [ordens, save] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const API = async () => {\r\n            // obtener los pedidos\r\n            const bg = await axios.get('/shoppingcart');\r\n            save(bg.data);\r\n        }\r\n        API();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Pedidos</h2>\r\n\r\n            <ul className=\"listado-pedidos\">\r\n                {ordens.map(order => (\r\n                    <ShoppingCardOrder \r\n                        key={order._id}\r\n                        order={order}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default ShoppingCard;","  \r\nimport React from 'react';\r\n\r\nfunction FormSearchProduct(props) {\r\n    return(\r\n            <form\r\n                onSubmit={props.searchProduct}\r\n            >\r\n                <legend>Busca un Producto y agrega una cantidad</legend>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Productos:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Nombre Productos\" \r\n                        name=\"productos\" \r\n                        onChange={props.readSearchData}\r\n                    />\r\n                </div>\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-azul btn-block\"\r\n                    value=\"Buscar Producto\"\r\n                />\r\n\r\n            </form>\r\n    )\r\n}\r\nexport default FormSearchProduct;","import React from 'react';\r\n\r\nfunction FormProduct(props) {\r\n\r\n    const {product, decrease, increase, removeProduct,  index } = props;\r\n\r\n    return(\r\n        <li>\r\n            <div className=\"texto-producto\">\r\n                <p className=\"nombre\">{product.name}</p>\r\n                <p className=\"precio\">$ {product.price}</p>\r\n            </div>\r\n            <div className=\"acciones\">\r\n                <div className=\"contenedor-cantidad\">\r\n                    <i \r\n                        className=\"fas fa-minus\"\r\n                        onClick={() => decrease(index) }\r\n                    ></i>\r\n                    <p>{product.quantity}</p>\r\n                    <i \r\n                        className=\"fas fa-plus\"\r\n                        onClick={() => increase(index) }\r\n                    ></i>\r\n                </div>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-rojo\"\r\n                    onClick={() => removeProduct(product._id)}\r\n                >\r\n                    <i className=\"fas fa-minus-circle\"></i>\r\n                        Eliminar Producto\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default FormProduct;","import React, {useState, useEffect, Fragment} from 'react';\r\nimport axios from '../../config/axios';\r\nimport Swal from 'sweetalert2';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FormSearchProduct from './FormSearchProduct';\r\nimport FormProduct from './FormProduct';\r\n\r\nfunction NewShpingCart(props) {\r\n\r\n    // extraer ID de cliente\r\n    const { id } = props.match.params;\r\n\r\n    // state\r\n    const [customer, saveCustomer] = useState({});\r\n    const [search, saveSearch] = useState('');\r\n    const [products, saveProducts] = useState([]);\r\n    const [total, saveTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        // obtener el cliente\r\n        const API = async () => {\r\n            // consultar el cliente actual\r\n            const bg = await axios.get(`/customers/${id}`);\r\n            saveCustomer(bg.data);\r\n        }\r\n        API();\r\n        // actualizar el total a pagar\r\n        // si el arreglo de productos es igual 0: el total es 0\r\n        if(products.length === 0) {\r\n            saveTotal(0);\r\n            return;\r\n        }\r\n\r\n        // calcular el nuevo total\r\n        let newTotal = 0;\r\n\r\n        // recorrer todos los productos, sus cantidades y precios\r\n        products.map(product => newTotal += (product.quantity * product.price)  );\r\n\r\n        // almacenar el Total\r\n        saveTotal(newTotal);\r\n        \r\n    }, [id, products]);\r\n\r\n    const searchProduct  = async e => {\r\n        e.preventDefault();\r\n\r\n        // obtener los productos de la busqueda\r\n        const bg = await axios.post(`/products/search/${search}`);\r\n        console.log(bg);\r\n\r\n        // si no hay resultados una alerta, contrario agregarlo al state\r\n        if(bg.data[0]) {\r\n\r\n            let res = bg.data[0];\r\n            // agregar la llave \"producto\" (copia de id)\r\n            res.product = bg.data[0]._id;\r\n            res.quantity = 0;\r\n\r\n            // ponerlo en el state\r\n            saveProducts([...products, res]);\r\n\r\n        } else {\r\n            // no hay resultados\r\n            Swal.fire({\r\n                type: 'error',\r\n                title: 'No Resultados',\r\n                text: 'No hay resultados'\r\n            })\r\n        }\r\n    } \r\n\r\n    const readSearchData = e => {\r\n        saveSearch( e.target.value );\r\n    }\r\n\r\n    // actualizar la cantidad de productos\r\n    const decrease = i => {\r\n        // copiar el arreglo original de productos\r\n        const all = [...products];\r\n\r\n        // validar si esta en 0 no puede ir mas alla\r\n        if(all[i].quantity === 0) return;\r\n\r\n        // decremento\r\n        all[i].quantity--;\r\n\r\n        // almacenarlo en el state\r\n        saveProducts(all);\r\n\r\n    }\r\n\r\n    const increase = i => {\r\n       // copiar el arreglo para no mutar el original\r\n        const all = [...products];\r\n\r\n       // incremento\r\n        all[i].quantity++;\r\n\r\n       // almacenarlo en el state\r\n        saveProducts(all);\r\n    }\r\n\r\n    // Elimina Un producto del state \r\n    const removeProduct = id => {\r\n        const all = products.filter(product => product.product !== id );\r\n\r\n        saveProducts(all)\r\n    }\r\n\r\n    const createShoppingCart = async e => {\r\n        e.preventDefault();\r\n\r\n        // extraer el ID\r\n        const { id } = props.match.params;\r\n        \r\n        // construir el objeto\r\n        const shoppingcart = {\r\n            \"customer\" : id, \r\n            \"details\" : products, \r\n            \"total\" : total\r\n        }\r\n        console.log(shoppingcart);\r\n\r\n        // almacenarlo en la BD\r\n        const result = await axios.post(`/shoppingcart/new/${id}`, shoppingcart);\r\n\r\n        // leer resultado\r\n        if(result.status === 200) {\r\n            // alerta de todo bien\r\n            Swal.fire({\r\n                type: 'success',\r\n                title: 'Correcto',\r\n                text: result.data.message\r\n            })\r\n        } else {\r\n            // alerta de error\r\n            Swal.fire({\r\n                type: 'error',\r\n                title: 'Hubo un Error',\r\n                text: 'Vuelva a intentarlo'\r\n            })\r\n        }\r\n\r\n        // redireccionar\r\n        props.history.push('/shoppingCart');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Nuevo Pedido</h2>\r\n\r\n            <div className=\"ficha-cliente\">\r\n                <h3>Datos de Cliente</h3>\r\n                <p>Nombre: {customer.name} {customer.last_name}</p>\r\n                <p>Teléfono: {customer.phone}</p>\r\n            </div>\r\n\r\n            <FormSearchProduct \r\n                searchProduct={searchProduct}\r\n                readSearchData={readSearchData}\r\n            />\r\n\r\n            <ul className=\"resumen\">\r\n                {products.map((product, index) => (\r\n                    <FormProduct \r\n                        key={product.product}\r\n                        product={product}\r\n                        decrease={decrease}\r\n                        increase={increase}\r\n                        removeProduct={removeProduct}\r\n                        index={index}\r\n                    />\r\n                ))}\r\n\r\n            </ul>\r\n            <p className=\"total\">Total a Pagar: <span>S/. {total}</span> </p>\r\n            { total > 0 ? (\r\n                <form\r\n                    onSubmit={createShoppingCart}\r\n                >\r\n                    <input type=\"submit\"\r\n                        className=\"btn btn-verde btn-block\"\r\n                        value=\"Realizar Pedido\" />\r\n                </form>\r\n            ) : null }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(NewShpingCart);","import React, {useState, useContext} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from '../../../config/axios';\r\n\r\n// Context\r\nimport { CRMContext } from '../../../context/CRMContext';\r\n\r\nfunction Login(props){\r\n\r\n    // Auth y token\r\n    const [, saveAuth] = useContext(CRMContext);\r\n\r\n\r\n    // State con los datos del formulario\r\n    const [ credentials, saveCredentials] = useState({});\r\n\r\n\r\n    // iniciar sesión en el servidor\r\n    const initSession = async e => {\r\n        e.preventDefault();\r\n\r\n        // autenticar al usuario\r\n\r\n        try {\r\n            const respuesta = await axios.post('/login', credentials);\r\n            \r\n            // extraer el token y colocarlo en localstorage\r\n            const { token } = respuesta.data;\r\n            localStorage.setItem('token', token);\r\n\r\n            // colocarlo en el state\r\n            saveAuth({\r\n                token, \r\n                auth: true\r\n            })\r\n\r\n            // alerta\r\n            Swal.fire(\r\n                'Login Correcto',\r\n                'Has iniciado Sesión',\r\n                'success'\r\n            )\r\n\r\n            // redireccionar\r\n            props.history.push('/');\r\n\r\n            \r\n        } catch (error) {\r\n            //console.log(error);\r\n            if(error.response){\r\n                Swal.fire({\r\n                    type: 'error',\r\n                    title: 'Hubo un error',\r\n                    text: error.response.data.message\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    type: 'error',\r\n                    title: 'Hubo un error',\r\n                    text: 'hubo un error por CORS '\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    // almacenar lo que el usuario escribe en el state\r\n    const readData = e => {\r\n        saveCredentials({\r\n            ...credentials,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    return(\r\n\r\n        <div className=\"login\">\r\n            <h2>Iniciar Sesión</h2>\r\n\r\n            <div className=\"contenedor-formulario\">\r\n                <form\r\n                    onSubmit={initSession}\r\n                >\r\n\r\n                    <div className=\"campo\">\r\n                        <label>Email</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email para Iniciar Sesión\"\r\n                            required\r\n                            onChange={readData}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo\">\r\n                        <label>Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password para Iniciar Sesión\"\r\n                            required\r\n                            onChange={readData}\r\n                        />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" value=\"Iniciar Sesión\" className=\"btn btn-verde btn-block\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);","import React,{ Fragment,useContext } from \"react\";\n\n/** Routing */\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\n/** Layout */\nimport Header from './components/layout/Header';\nimport Nav from './components/layout/Nav';\n\n/** Components */\nimport Customers from './components/CustomerList/Default'\nimport NewCustomer from './components/CustomerNew/Default'\n\nimport Products from './components/ProductList/Default'\nimport NewProduct from './components/ProductNew/Default'\n\nimport ShoppingCarts from './components/ShoppingCartList/Default'\nimport NewShoppingCart from './components/ShoppingCartNew/Default'\n\nimport { CRMContext, CRMProvider } from './context/CRMContext';\n\nimport Login from './components/Auth/Login/Default'\n\nfunction App(){\n  // utilizar context en el componente\n  const [ auth, saveAuth ] = useContext(CRMContext);\n  \n  return (\n    <Router>\n      <Fragment>\n        <CRMProvider value={[ auth, saveAuth ]}>\n        <Header/>\n        <div className=\"grid contenedor contenido-principal\">\n          <Nav/>\n          \n          <main className=\"caja-contenido col-9\">\n            <Switch>\n              <Route exact path=\"/\" component={Customers} />\n              <Route exact path=\"/customer/new\" component={NewCustomer} />\n              <Route exact path=\"/customer/edit/:id\" component={NewCustomer} />\n\n              <Route exact path=\"/product\" component={Products} />\n              <Route exact path=\"/product/new\" component={NewProduct} />\n              <Route exact path=\"/product/edit/:id\" component={NewProduct} />\n\n              <Route exact path=\"/shoppingCart\" component={ShoppingCarts} />\n              <Route exact path=\"/shoppingCart/new/:id\" component={NewShoppingCart} />\n\n              <Route exact path=\"/login\" component={Login} />\n              \n            </Switch>\n          </main>\n        </div>\n        </CRMProvider>\n      </Fragment>\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}